import '../../model/lang/initial_resource.dart';
import '../../model/quiz_item/quiz_item.dart';
import '../../untils/enums.dart';

List<QuizItem> get category3_9 {
  final quizItems = [
    QuizItem(
      word: 'レスポンスタイム',
      question: 'システムが要求に応答するまでの時間は何と呼ばれるか？',
      ans: 'レスポンスタイム',
      choices: ["レスポンスタイム", "スループット", "ターンアラウンドタイム", "待機時間"],
      comment: "レスポンスタイムは、システムが要求に応答するまでの時間を指し、システムの応答性能を示す指標。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'スループット',
      question:
          'コンピュータシステムが単位時間当たりに処理できるジョブやトランザクションなどの処理件数のことであり，コンピュータの処理能力を表すものはどれか。',
      ans: 'スループット',
      choices: ["アクセスタイム", "スループット", "タイムスタンプ", "レスポンスタイム"],
      comment:
          "スループットとは、コンピュータやネットワークが一定時間内に処理できる仕事量のことで、システムにおけるパフォーマンスの評価基準。",
      source: '平成21年秋期 問61',
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'ターンアラウンドタイム',
      question: 'ジョブが開始されてから完了するまでの総時間は何と呼ばれるか？',
      ans: 'ターンアラウンドタイム',
      choices: ["ターンアラウンドタイム", "レスポンスタイム", "スループット", "実行時間"],
      comment: "ターンアラウンドタイムは、ジョブが開始されてから完了するまでの総時間を指し、システムの効率性を示す指標。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'ベンチマーク',
      question: 'システム評価の方法であるベンチマークテストに関する記述として，最も適切なものはどれか。',
      ans: 'システムの処理能力を，標準的なプログラムやデータを用いて評価する。',
      choices: [
        "システムの可用性を，システムが正常に稼働している割合で評価する。",
        "システムの処理能力を，標準的なプログラムやデータを用いて評価する。",
        "システムの信頼性を，障害が回復してシステムが復旧してから，次の障害が発生してシステムが停止するまでの平均時間で評価する。",
        "システムの保守性を，システムが故障で停止してから復旧するまでの平均時間で評価する。"
      ],
      comment:
          "ベンチマークは、システム性能評価の技法で、典型的なプログラムを実行し、入出力や制御プログラムを含めたシステムの総合的な処理性能を定量的に測定する手法で、整数や浮動小数点演算の能力を評価するSPEC、オンライントランザクション処理能力を評価するTPCなどがある。",
      source: '平成23年特別 問66',
      importance: QuizImportanceType.high,
    ),
    QuizItem(
      word: '稼働率',
      question: 'MTBFが600時間，MTTRが12時間である場合，稼働率はおおよそ幾らか。',
      ans: '0.98',
      choices: ["0.02", "0.20", "0.88", "0.98"],
      comment: "稼働率は、システムが故障なしに稼働し続けることができる確率、または稼働時間の割合を指し、システムの可用性を示す指標。",
      source: '平成24年春期 問70',
      importance: QuizImportanceType.high,
    ),
    QuizItem(
      word: 'MTBF（Mean Time Between Failures）',
      question:
          'あるコンピュータシステムの故障を修復してから60,000時間運用した。その間に100回故障し，最後の修復が完了した時点が60,000時間目であった。MTTRを60時間とすると，この期間でのシステムのMTBFは何時間となるか',
      ans: '540',
      choices: ["480", "540", "599.4", "600"],
      comment:
          "MTBF（Mean Time Between Failures）は、システムの信頼性をあらわす指標で、システムの修理が完了し正常に稼働し始めてから、次回故障するまでの平均故障間隔のこと。",
      importance: QuizImportanceType.high,
    ),
    QuizItem(
      word: '"MTTR（Mean Time To Repair）',
      question: ' あるシステムにおいて，MTBFとMTTRがどちらも1.5倍になったとき，稼働率はどうなるか。',
      ans: '変わらない。',
      choices: ["2/3倍になる", "1.5倍になる。", "2倍になる。", "変わらない。"],
      comment:
          "MTTR（Mean Time To Repair）は、システムの故障を修理するために要した平均修復時間のことで、システムの保守性をあらわす指標としても用いられる。",
      source: '平成23年特別 問71',
      importance: QuizImportanceType.high,
    ),
    QuizItem(
      word: 'フェールセーフ',
      question: 'フェールセーフの説明として，適切なものはどれか。',
      ans: '故障や操作ミスが発生しても，安全が保てるようにしておく。',
      choices: [
        "故障や操作ミスが発生しても，安全が保てるようにしておく。",
        "障害が発生した際に，正常な部分だけを動作させ，全体に支障を来さないようにする。",
        "組織内のコンピュータネットワークに外部から侵入されるのを防ぐ。",
        "特定の条件に合致するデータだけをシステムに受け入れる。"
      ],
      comment: "フェールセーフは、システムが故障しても安全な状態に留まる、または最小限の影響で済むように設計された安全性の原則。",
      source: '平成21年春期 問65',
      importance: QuizImportanceType.normal,
    ),
    QuizItem(
      word: 'フォールトトレラント',
      question: 'システムが部分的な故障が発生しても全体としての機能を維持し続ける能力を持つ設計原則は何か？',
      ans: 'フォールトトレラント',
      choices: ["フォールトトレラント", "フェールセーフ", "フールプルーフ", "レジリエンス"],
      comment: "フォールトトレラントは、システムが部分的な故障が発生しても全体としての機能を維持し続ける能力を持つ設計原則。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'フールプルーフ',
      question: 'フールプルーフの考え方として，適切なものはどれか。',
      ans: '人間がシステムの操作を誤ってもシステムの安全性と信頼性を保持する。',
      choices: [
        "故障などでシステムに障害が発生した際に，被害を最小限にとどめるようにシステムを安全な状態にする。",
        "システム障害は必ず発生するという思想の下，故障の影響を最低限に抑えるために，機器の多重化などの仕組みを作る。",
        "システムに故障が発生する確率を限りなくゼロに近づけていく。",
        "人間がシステムの操作を誤ってもシステムの安全性と信頼性を保持する。"
      ],
      comment:
          "フールプルーフは、不特定多数の人が操作するシステムに、入力データのチェックやエラーメッセージの表示などの機能を加えることで、人為的ミスによるシステムの誤動作を防ぐように設計する考え方。",
      source: '平成21年秋期 問67',
      importance: QuizImportanceType.normal,
    ),
    QuizItem(
      word: 'コールドスタンバイ',
      question: '主系統が故障した際に、代替系統が手動で起動されるスタンバイシステムは何と呼ばれるか？',
      ans: 'コールドスタンバイ',
      choices: ["コールドスタンバイ", "ホットスタンバイ", "ウォームスタンバイ", "デュアルシステム"],
      comment: "コールドスタンバイは、主系統が故障した際に、代替系統が手動で起動されるスタンバイシステムを指す。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'ホットスタンバイ',
      question: '主系統が故障した際に、代替系統が即座に自動で切り替わり稼働を開始するスタンバイシステムは何か？',
      ans: 'ホットスタンバイ',
      choices: ["ホットスタンバイ", "コールドスタンバイ", "ウォームスタンバイ", "デュアルシステム"],
      comment: "ホットスタンバイは、主系統が故障した際に、代替系統が即座に自動で切り替わり稼働を開始するスタンバイシステムを指す。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'イニシャルコスト',
      question: 'システム導入時に必要となる初期投資のコストは何と呼ばれるか？',
      ans: 'イニシャルコスト',
      choices: ["イニシャルコスト", "ランニングコスト", "TCO", "オペレーショナルコスト"],
      comment:
          "イニシャルコストは、システム導入時に必要となる初期投資のコストを指し、ハードウェア、ソフトウェア、導入作業などの費用が含まれる。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'ランニングコスト',
      question: 'システム稼働後に発生する日々の運用や維持管理に関わるコストは何と呼ばれるか？',
      ans: 'ランニングコスト',
      choices: ["ランニングコスト", "イニシャルコスト", "TCO", "オペレーショナルコスト"],
      comment: "ランニングコストは、システム稼働後に発生する日々の運用や維持管理に関わるコストを指す。",
      importance: QuizImportanceType.low,
    ),
    QuizItem(
      word: 'TCO',
      question: 'TCO(Total Cost of Ownership)の説明として，最も適切なものはどれか。',
      ans: 'システム導入時に発生する費用と，導入後に発生する運用費・管理費の総額',
      choices: [
        "システム導入後に発生する運用・管理費の総額",
        "システム導入後に発生するソフトウェア及びハードウェアの障害に対応するために必要な費用の総額",
        "システム導入時に発生する費用と，導入後に発生する運用費・管理費の総額",
        "システム導入時に発生する費用の総額"
      ],
      comment:
          "TCO（Total Cost of Ownership）は、ある設備・システムなどにかかわる、購入から廃棄までに必要な時間と支出の総計金額を表し、システム開発やハードウェア導入、ソフトウェアの導入など初期投資に必要となるイニシャルコストと、運用・保守・教育・アップグレードなど維持管理に必要となるランニングコストに分類することができる。",
      importance: QuizImportanceType.normal,
    ),
  ];

  return List.generate(quizItems.length, (index) {
    return quizItems[index]
        .copyWith(quizId: index + I18n().category3Index + 901);
  });
}
