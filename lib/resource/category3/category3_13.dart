import '../../model/lang/initial_resource.dart';
import '../../model/quiz_item/quiz_item.dart';

List<QuizItem> get category3_13 {
  final quizItems = [
    QuizItem(
      question: '製品やサービスのデザインにおいて、機能性、美しさ、使いやすさなどを考慮して設計する際の基本的な考え方やルールは何か？',
      ans: 'デザインの原則',
      choices: ["デザインの原則", "シグニファイア構造化", "シナリオ法", "ユニバーサルデザイン"],
      comment:
          "デザインの原則は、製品やサービスのデザインにおいて、機能性、美しさ、使いやすさなどをバランス良く考慮して設計する際の基本的な考え方やルール。",
    ),
    QuizItem(
      question: '情報や機能を明確に伝えるための視覚的手がかりをデザインに取り入れることを何というか？',
      ans: 'シグニファイア構造化',
      choices: ["シグニファイア構造化", "デザインの原則", "UXデザイン", "ピクトグラム"],
      comment:
          "シグニファイア構造化は、情報や機能を利用者に明確に伝えるための視覚的手がかり（シグニファイア）をデザインに取り入れ、直感的な理解を促す方法。",
    ),
    QuizItem(
      question: 'ユーザーが製品やサービスを使用する際の一連の行動や体験を物語形式で表現し、デザインの検討材料とする手法は何か？',
      ans: 'シナリオ法',
      choices: ["シナリオ法", "シグニファイア構造化", "UXデザイン", "ユニバーサルデザイン"],
      comment:
          "シナリオ法は、ユーザーが製品やサービスを使用する際の一連の行動や体験を物語形式で表現し、デザインプロセスの検討材料とする手法。",
    ),
    QuizItem(
      question: 'ユーザーの体験を重視したデザイン手法で、製品やサービスの使い勝手や満足度を向上させることを目的とするものは何か？',
      ans: 'UXデザイン',
      choices: ["UXデザイン", "シグニファイア構造化", "シナリオ法", "ピクトグラム"],
      comment:
          "UXデザイン（User Experience Design）は、ユーザーの体験を重視したデザイン手法で、製品やサービスの使い勝手や満足度を向上させることを目的とする。",
    ),
    QuizItem(
      question: 'あらゆる人々が、年齢や障害の有無にかかわらず、製品や環境を利用しやすいように設計するデザインの考え方は何か？',
      ans: 'ユニバーサルデザイン',
      choices: ["ユニバーサルデザイン", "UXデザイン", "シグニファイア構造化", "ピクトグラム"],
      comment:
          "ユニバーサルデザインは、あらゆる人々が、年齢や障害の有無にかかわらず、製品や環境を利用しやすいように設計するデザインの考え方。",
    ),
    QuizItem(
      question: '情報や指示を簡潔に伝えるために用いられる視覚的記号やイラストは何と呼ばれるか？',
      ans: 'ピクトグラム',
      choices: ["ピクトグラム", "インフォグラフィックス", "シグニファイア", "アイコン"],
      comment: "ピクトグラムは、公共の場所や製品などで情報や指示を簡潔に伝えるために用いられる視覚的記号やイラスト。",
    ),
    QuizItem(
      question: 'データや情報を視覚的に表現し、理解や伝達を助けるためのグラフィックデザインは何と呼ばれるか？',
      ans: 'インフォグラフィックス',
      choices: ["インフォグラフィックス", "ピクトグラム", "UXデザイン", "シナリオ法"],
      comment: "インフォグラフィックスは、複雑なデータや情報を視覚的に表現し、理解や伝達を助けるためのグラフィックデザイン。",
    ),
  ];

  return List.generate(quizItems.length, (index) {
    return quizItems[index]
        .copyWith(quizId: index + I18n().category3Index + 1301);
  });
}
